created: 20210311161258151
modified: 20210311192019810
tags: [[2.05 Les calculs]]
title: 2.5.05 Nombres pseudo-aléatoires
type: text/vnd.tiddlywiki

Il est très courant en programmation de devoir générer des nombres aléatoires.

Malheureusement, un ordinateur étant essentiellement une «grosse calculatrice», il ne lui est pas possible de générer par lui-même des nombres au hasard; pour ce faire, on doit plutôt se baser sur une fonction mathématique qui génère un semblant de hasard, soit du ''pseudo-aléatoire''. Les résultats fournis par une telle fonction donnent statistiquement l'impression d'être dus au hasard, alors qu'il s'agit en fait de valeurs calculées. 



En C#, on peut générer des nombres pseudo-aléatoires grâce à la classe ''Random'' de la façon suivante:

```cs
// Initialise le générateur (une seule fois, idéalement au tout début du programme), ici appelé « rnd »
Random rnd = new Random();

// Génère et stocke un nombre aléatoire situé entre 0 et 9 (inclusivement)
int nbAleatoire1 = rnd.Next(10);

// Génère et stocke un nombre aléatoire situé entre 12 et 22 (inclusivement)
int nbAleatoire2 = rnd.Next(12, 23);
```

À noter qu'il est ''très important'' d'initialiser le générateur ''une seule fois'' dans tout le programme, donc idéalement au tout début du programme (ou dans une variable ''static'' pour une classe, qu'on verra plus tard), et ce afin de ne pas risquer d'ensemencer la fonction plus d'une fois à l'intérieur de la même seconde (la semance (//seed//) est la première valeur passée à la fonction du générateur, lequel calcule chaque nouvelle valeur à partir de la valeur précédente; la fonction retournera toujours le même nombre pour la même semance, et cette semance, par défaut, est généralement le temps //epoch// (ou [[heure UNIX|https://fr.wikipedia.org/wiki/Heure_Unix]]) donné en secondes).

<p class="boite">
[img[https://i.imgur.com/CwBdvs2.jpg]]
//Un informaticien qui savait qu'une machine de lotterie électronique ne pouvait pas générer des combinaisons réellement aléatoires!//
</p>