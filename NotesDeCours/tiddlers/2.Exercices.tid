created: 20210208161536234
modified: 20210210183116796
tags: [[02 Variables]]
title: 2.Exercices
type: text/vnd.tiddlywiki

# Reprenez le code que vous avez obtenu à la fin des exercices de la section 1, et modifiez-le afin que tous les nombres du code soient de type ''decimal''.
#> Vous aurez sans doute besoin de la méthode `Convert.ToDecimal()` et de faire du «type casting».

# Ajoutez à votre code une variable à laquelle vous affecterez votre nom complet, et faites en sorte que le programme affiche « Programme écrit par [votre nom] » au début de son exécution, où vous remplacerez [votre nom] par le contenu de la variable créée.

# Corrigez le code suivant sans toucher aux types de variable déjà en place:<div>

```cs
const decimal lbsParKg = 2.2m;
float poids = 155.12;

double masse = poids / lbsParKg;

Console.WriteLine("Un poids de {poids} lbs correpond à une masse de {masse} kg.");
```

</div>

# Pourquoi utiliser des ''decimal'' au lieu de ''double''? Écrivez un programme qui calcule et affiche la différence entre 1.18 et 0.08 (donc 1.18-0.08), d'abord en utilisant seulement le type ''double'', ensuite seulement le type ''decimal'': que remarquez-vous...? 

# Démarrez un nouveau projet dans Visual Studio appelé «~ConvertisseurTemperature». En vous inspirant du code déjà vu de la calculatrice et d'autres exemples des notes de cours, et sachant que:<div>

<p class="boite">°F = (°C &times; 9/5) + 32</p>

</div>écrivez un programme pour convertir des températures de °F en °C et vice-versa (le programme devra donc demander à l'utilisateur d'entrer une température et de spécifier si la température entrée est en °C ou en °F afin d'effectuer la conversion appropriée).
#* Utilisez les types de votre choix, tant qu'ils sont appropriés au contexte
#* Affichez toutes les températures avec une seule décimale
#* N'oubliez pas de mettre des commentaires pertinents
#* Aux fins de tests: 0°C = 32°F, -40°C = -40°F, 37°C = 98,6°F, 100°C = 212°F