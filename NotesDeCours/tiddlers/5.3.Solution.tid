created: 20210307203945150
modified: 20210307205922753
title: 5.3.Solution
type: text/vnd.tiddlywiki

# __98.1.2__<div>

```cs
// Reçoit le rayon en mm en argument
double rayonCm = Convert.ToDouble(args[0]) / 10.0;

// Calcule l'aire et le périmètre
double aireCm2 = Math.PI * Math.Pow(rayonCm, 2.0);
double perimetreCm = 2.0 * Math.PI * rayonCm;

// Affiche les valeurs à deux décimales près
Console.WriteLine($"Aire du cercle = {aireCm2:f2} cm^2");
Console.WriteLine($"Périmètre du cercle = {perimetreCm:f2} cm");
```
</div>

# __98.1.3__<div>

```cs
// Constantes de base
const double secondesParMinute = 60.0;
const double minutesParHeure = 60.0;
const double heuresParJour = 24.0;
const double joursParAnnee = 365.25;

// Constantes calculées
const double secondesParHeure = secondesParMinute * minutesParHeure;
const double secondesParJour = secondesParHeure * heuresParJour;
const double secondesParAnnee = secondesParJour * joursParAnnee;

// Reçoit un nombre de secondes en argument du programme
double secondesEntrees = Convert.ToDouble(args[0]);

// Contiendra les secondes restantes après chaque division
double secondes = secondesEntrees;

// Calcule les années, jours, heures, minutes et secondes restantes
int annees = (int)(secondes / secondesParAnnee);
secondes %= secondesParAnnee;

int jours = (int)(secondes / secondesParJour);
secondes %= secondesParJour;

int heures = (int)(secondes / secondesParHeure);
secondes %= secondesParHeure;

int minutes = (int)(secondes / secondesParMinute);
secondes %= secondesParMinute;

// Affiche le résultat
Console.WriteLine($"\n{secondesEntrees}s = {annees} ans, {jours} jours, {heures} h, {minutes} min et {secondes} s");

// Preuve
double secondesPreuve = secondes + minutes * secondesParMinute + heures * secondesParHeure + jours * secondesParJour + annees * secondesParAnnee;
if (secondesPreuve == secondesEntrees)
{
    Console.WriteLine("\nCalcul réussi!");
}
else
{
    Console.WriteLine($"\nOups...! Quelque-chose ne va pas, car {secondesPreuve} != {secondesEntrees}...");
}
```
</div>

# __98.1.4__<div>

```cs
string prenomNom = "";
            int nbUnites = 0;
            decimal prixUnitaire = 0;
            decimal pctTPS = 0;
            decimal pctTVQ = 0;

            // Pour i variant de 0 à args.Length-1...
            for (int i = 0; i < args.Length; i++)
            {
                // Affecte les valeurs en fonction des noms d'arguments rencontrés, peu importe leur ordre
                switch (args[i])
                {
                    case "--nom":
                        prenomNom = args[++i];
                        break;

                    case "--unites":
                        nbUnites = Convert.ToInt32(args[++i]);
                        break;

                    case "--prix":
                        prixUnitaire = Convert.ToDecimal(args[++i]);
                        break;

                    case "--tps":
                        pctTPS = Convert.ToDecimal(args[++i]) / 100m;
                        break;

                    case "--tvq":
                        pctTVQ = Convert.ToDecimal(args[++i]) / 100m;
                        break;
                }
            }

            decimal sousTotal = nbUnites * prixUnitaire;
            decimal TPS = Math.Round(sousTotal * pctTPS, 2);
            decimal TVQ = Math.Round(sousTotal * pctTVQ, 2);
            decimal total = sousTotal + TPS + TVQ;

            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine("****************************************");
            Console.WriteLine("** Facture                            **");
            Console.WriteLine("****************************************");
            Console.WriteLine();
            Console.WriteLine($"Client: {prenomNom}");
            Console.WriteLine();
            Console.WriteLine("{0, 10} {1, 14} {2, 14}", "Unités", "Prix unit.", "Total");
            Console.WriteLine("{0, 10} {1, 14:c} {2, 14:c}", "--------", "------------", "------------");
            Console.WriteLine("{0, 10} {1, 14:c} {2, 14:c}", nbUnites, prixUnitaire, sousTotal);
            Console.WriteLine();
            Console.WriteLine("{0, 10} {1, 14:c} {2, 14:c}", "", "TPS:", TPS);
            Console.WriteLine("{0, 10} {1, 14:c} {2, 14:c}", "", "TVQ:", TVQ);
            Console.WriteLine("{0, 10} {1, 14:c} {2, 14:c}", "", "", "------------");
            Console.WriteLine("{0, 10} {1, 14:c} {2, 14:c}", "", "", total);
```
</div>

# __98.1.6__<div>

```cs
int date;
string mois;

// Étape 1
int A = Convert.ToInt32(args[0]);

// Étape 2
int O = (A % 19) + 1;

// Étape 3
int S = A / 100 + 1;

// Étape 4
int B = 3 * S / 4 - 12;

// Étape 5
int C = (8 * S + 5) / 25 - 5;

// Étape 6
int D = 5 * A / 4 - B - 10;

// Étape 7
int P = (11 * O + 20 + C - B) % 30;
if (P < 0)
{
    P += 30;
}
if ((P == 25 && O > 11) || P == 24)
{
    P++;
}

// Étape 8
int J = 44 - P;
if (J < 21)
{
    J += 30;
}

// Étape 9
J += 7 - ((D + J) % 7);

// Étape 10
if (J > 31)
{
    date = J - 31;
    mois = "avril";
}
else
{
    date = J;
    mois = "mars";
}

Console.WriteLine($"La date de Pâques pour l'année {A} est le {date} {mois}.");
```
</div>

# __98.1.9__<div>

```cs
int num1 = Convert.ToInt32(args[0]);
int num2 = Convert.ToInt32(args[1]);

for (int i = num1; i <= num2; i += 5)
{
    Console.WriteLine($"La racine carrée de {i} est {Math.Sqrt(i)}");
}
```
</div>