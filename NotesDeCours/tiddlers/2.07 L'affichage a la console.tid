created: 20210209150258694
list: 
modified: 20210210143331495
tags: [[02 Variables]]
title: 2.07 L'affichage à la console
type: text/vnd.tiddlywiki

On voudra souvent afficher du texte ou la valeur de variables définies. À la console, on utilisera principalement pour ce faire les méthodes `System.Console.Write()` (qui n'ajoute pas de retour de ligne automatique) et `System.Console.WriteLine()` (qui ajoute un retour de ligne à la fin de l'affichage).

Pour ces deux méthodes, on place entre les parenthèses le contenu à afficher (ce sont les ''arguments'' passés à la méthode). Il y a plusieurs façons d'utiliser ces méthodes (tous les exemples ci-dessous afficheront le même texte):

```cs
/*
   Affichage d'une chaîne brute (on note les guillemets anglais pour encadrer la chaîne)
*/
Console.WriteLine("J'ai 32 ans et je pèse 155,13 lbs.");
```

```cs
/*
   Affichage en alternance de chaînes brutes et de variables avec des instructions séparées
*/

int age = 32;
decimal poids = 155.13m;

Console.Write("J'ai ");
Console.Write(age);
Console.Write(" ans et je pèse ");
Console.Write(poids);
Console.WriteLine(" lbs.");
```

```cs
/*
   Affichage d'une concaténation de chaînes brutes et de variables
*/

int age = 32;
decimal poids = 155.13m;

Console.WriteLine("J'ai " + age + " ans et je pèse " + poids + " lbs.");
```

```cs
/*
   Affichage avec formattage composite: les accolades contiennent un index (partant de
   zéro) référant à une des variables listées à la suite de la chaîne; ainsi, ici, {0}
   réfère à la variable «age», et {1} réfère à la variable «poids»
*/

int age = 32;
decimal poids = 155.13m;

Console.WriteLine("J'ai {0} ans et je pèse {1} lbs.", age, poids);
```

```cs
/*
   Affichage avec interpolation de chaînes (en vigueur depuis C# v6.0): au lieu d'index,
   on insère directement les variables à afficher dans les accolades, mais on doit alors
   préfixer la chaîne d'un «$»
*/

int age = 32;
decimal poids = 155.13m;

Console.WriteLine($"J'ai {age} ans et je pèse {poids} lbs.");
```

! Les caractères spéciaux

* Si jamais on a besoin d'écrire des guillemets anglais à l'intérieur d'une chaîne, on peut les échapper avec une barre oblique inverse:<div>

```cs
Console.WriteLine("Le mot \"redingotte\" vient de l'anglais \"riding coat\".");
```
</div>

* Il existe aussi certains [[caractères de formattage|https://docs.microsoft.com/fr-fr/cpp/c-language/escape-sequences?view=msvc-160]], dont notamment:<div>

```cs
// Un « \n » insère un retour de ligne complet (change de ligne)
Console.WriteLine("1re ligne\n2e ligne\n3e ligne");

// Un « \t » insère une tabulation
Console.WriteLine("\tTexte tabulé");

// Un « \r » insère un retour chariot (retourne au début de la même ligne, sans créer de nouvelle ligne)
Console.WriteLine("Texte 1\rTexte 2 écrasera texte 1");
```
</div>

! Le formattage de chaînes composites ou interpolées

Il existe une syntaxe plus avancée permettant de [[formatter avec précision|https://docs.microsoft.com/fr-fr/dotnet/api/system.string.format?view=net-5.0#the-format-item]] la façon dont des valeurs (particulièrement des valeurs numériques) seront affichées.

Quelques exemples à essayer (ici j'utilise des valeurs numériques littérales, mais on pourrait aussi utiliser des variables):

```cs
// Affiche la valeur décimale de 5/3 avec 4 chiffres après la virgule
Console.WriteLine($"{5m/3m:f4}");

// Affiche des valeurs monétaires alignées à droite sur une colonne de largeur 10
Console.WriteLine($"{1245.673, 10:c}");
Console.WriteLine($"{45.8, 10:c}");
Console.WriteLine($"{465.7398, 10:c}");
```

---

<iframe width="640" height="360" src="https://web.microsoftstream.com/embed/video/ec1ad4ca-4d50-4f3d-87b2-c475eaf0e55d?autoplay=false&amp;showinfo=true" allowfullscreen style="border:none;"></iframe>