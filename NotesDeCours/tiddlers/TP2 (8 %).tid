created: 20210304215949777
modified: 20210307155601683
tags: [[99 Travaux pratiques et examens]]
title: TP2 (8 %)
type: text/vnd.tiddlywiki

|!Capacités évaluées: |<ul><li>Capacité 1: Résoudre des problèmes en utilisant les structures algorithmiques</li><li>Capacité 2: Appliquer les principes de programmation orientée objet</li><li>Capacité 3: Utiliser un environnement de développement intégré (IDE) pour développer des programmes</li></ul>|
|!À remettre: |<ul><li>Le ''dossier complet archivé (.zip)'' de la solution Visual Studio créée</li><li>Un document (MS-Word, ~LibreOffice, PDF...) contenant des captures d'écran de tests complets de fonctionnement du programme</li><li>Remise individuelle par Teams, par l'onglet des devoirs</li><li>Une démonstration par Teams suivant la remise devra être effectuée (voir la ligne «Évaluation» ci-dessous)</li></ul>|
|!Date limite de remise: |<ul><li>Jeudi 18 mars, 23h59</li></ul>|
|!Évaluation: |<ul><li>Ce travail vaut pour 8 % de la session</li><li>-10 % par jour de retard</li><li>Note de 0 si travail remis après retour à l'ensemble du groupe ou si le travail a été plagié en tout ou en partie</li><li>50% de la note sera attribuée en fonction du niveau de maîtrise du travail effectué par l'élève, lequel niveau sera établi par une entrevue individuelle verbale (démonstration de la solution)</li></ul>|
|!@@display:block;width:15em;Temps de réalisation estimé si la matière a été préalablement étudiée, pratiquée et comprise:@@ |<ul><li>5h</li></ul>|

! Énoncé

!! Sachant que:

# On peut à la fois tester si une chaîne correspond à un entier et, si oui, convertir du même coup cette chaîne en entier de la façon suivante:<div>

```cs
int entier;
string chaineNumerique = "123";

// Essaie de convertir chaineNumerique en int; si réussit, affecte la valeur convertie à «entier» et retourne «true», sinon affecte la valeur 0 à «entier» et retourne «false»
bool conversionReussie = int.TryParse(chaineNumerique, out entier);
```
</div>

# ''[Pas essentiel pour le travail]'' On peut sortir d'un programme console à n'importe quel moment de la façon suivante:<div>

```cs
Environment.Exit(codeSortie);
```

où `codeSortie` est de type ''int'' et est typiquement soit ''0'' (sortie intentionnelle normale, sans erreur), soit ''1'' (sortie en raison d'une erreur).
</div>

# ''[Pas essentiel pour le travail]'' On peut réinitialiser un tableau déjà déclaré de la façon suivante:<div>

```cs
// On déclare et définit le tableau «chaines»
string[] chaines = { "maison", "cheval", "voiture" };

// code intermédiaire...

// On redéfinit (écrase) le tableau chaines avec de nouvelles valeurs
chaines = new string[] { "banane", "pomme", "cerise" }; 

```
</div>

# Le 1er janvier 2021 était un vendredi.

!! Programmer un logiciel affichant n'importe quel mois de 2021 selon les spécifications suivantes:

# le programme doit pouvoir récupérer indifféremment le nom (en français, selon le format que vous préférez) ou le numéro (1 à 12) du mois que l'on désire afficher, lequel mois peut être passé soit en argument (avec les options `--mois` ou `-m`, indifféremment (les deux options doivent être possibles)), ou sinon demandé à l'invite du programme;

# le programme doit également pouvoir accepter un seul argument `--help` provoquant l'affichage des instructions d'utilisation du programme suivi de la fermeture du programme;

# le programme doit contenir une fonction de validation (une seule) qui valide si les arguments entrés (s'il y a lieu) sont valides tant en terme de type ou de valeur:
#* si oui et qu'on a passé un mois (par nom ou par numéro), elle retourne le numéro de ce mois (1-12);
#* si oui et qu'on a passé `--help`, elle retourne 0;
#* sinon, elle retourne -1;

# le programme doit contenir une fonction qui affiche le mois désiré à la manière des [[exercices 98.1.7 et 98.1.8|98.01 Sections 01-04]] (tous les en-tête compris); cette fonction doit prendre en argument le numéro du mois (1-12) à afficher;

# s'il y a échec de validation des arguments, le programme doit indiquer qu'il y a eu erreur dans les arguments et doit alors demander  d'entrer le mois désiré à l'invite du programme (seulement le mois (nom ou numéro), pas le nom de l'option);

# toute réponse entrée à l'invite du programme doit pouvoir être validée par la même fonction de validation qu'en 3.; à chaque réponse invalide, le programme doit reposer la question jusqu'à ce qu'une réponse valide soit entrée.

!! De plus:

* vous devez choisir des types de variables, des stuctures conditionnelles et des structures de boucles appropriées;

* vous devez réduire au minimum les valeurs codées dur;

* aucun avertissement ni aucune erreur ne doivent être signalés par Visual Studio;

* votre code doit être raisonnablement commenté;

* assurez-vous que votre code soit adéquatement indenté et aéré;

* n'oubliez pas de respecter les conventions de nomenclature établies.

<p class="boite">

! Toutes les informations contenues dans les sections 1 à 7 ainsi que le présent énoncé sont suffisantes pour réaliser le présent travail.

! Même s'il est incomplet, remettez un travail qui ''compile''.
</p>