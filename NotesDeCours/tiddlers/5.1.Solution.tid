created: 20210307200004827
modified: 20210307201320661
title: 5.1.Solution
type: text/vnd.tiddlywiki

#* Le `i++` de la boucle ''for'' sert à augmenter la variable d'incrémentation après chaque itération de la boucle; comme le `i++` est seul, l'ordre d'apparition du `++` n'a pas d'importance et on aurait tout aussi bien pu écrire `++i` dans ce cas.

#* Le `++i` dans la boucle augmente aussi la variable d'incrémentation, mais cette fois pour aller chercher l'argument suivant dans ''args''; ici, il est primordial que le `++` soit placé avant  le `i` afin d'augmenter sa valeur //avant// l'évaluation de `args[i]`.

# Donc, dans les faits, `i` augmentera de 2 à chaque itération, de manière à toujours commencer une itération avec un nom d'argument plutôt qu'avec une valeur d'argument, de sorte que le code pourrait aussi s'écrire ainsi:<div>

```cs
/* Programme de conversion de température qui prend les arguments suivants:
 *    --temp TEMPERATURE
 *    --unite { c | f }
 *    
 * où TEMPERATURE est la température à convertir, et UNITE est l'unité de TEMPERATURE (c=°C, f=°F)
 */
static void Main(string[] args)
{
    decimal temperature = 0;    // Température à convertir
    string uniteEntree = "";     // Unités de la température à convertir

    // Pour i variant de 0 à args.Length-1...
    for (int i=0; i<args.Length; i += 2)
    {
        // Affecte les valeurs en fonction des noms d'arguments rencontrés, peu importe leur ordre
        switch (args[i])
        {
            case "--temp":
                temperature = Convert.ToDecimal(args[i+1]);
                break;

            case "--unite":
                uniteEntree = args[i+1];
                break;
        }
    }

    // Affiche la conversion en fonction des unités de la temperature d'entrée
    switch (uniteEntree)
    {
        case "f":
            Console.WriteLine($"\n{temperature}°F = {(temperature - 32) * 5m / 9m}°C");
            break;
        case "c":
            Console.WriteLine($"\n{temperature}°C = {(temperature * 9m / 5m) + 32m}°F");
            break;
        default:
            Console.WriteLine($"\nMauvaise unité entrée.");
            break;
    }
}
```
</div>